version: "3.7"

services:
  db:
    container_name: edd2023-db
    build:
      context: ./
      dockerfile: ./docker/db/Dockerfile
    ports:
      - ${MYSQL_PORT}:${MYSQL_PORT}
    volumes:
      - ./docker/db/data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
  redis:
    image: redis:7.0-alpine
    container_name: edd2023-redis
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
  server:
    container_name: edd2023-server
    build:
      context: ./
      dockerfile: ./docker/server/Dockerfile
    ports:
      - ${SERVER_PORT}:${SERVER_PORT}
    depends_on:
      - db
      - redis
    volumes:
      - ./:/go/app
    tty: true
    environment:
      ENV: ${ENV}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_HOST: ${MYSQL_HOST} 
      MYSQL_PORT: ${MYSQL_PORT}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      SERVER_PORT: ${SERVER_PORT}
      LINEBOT_CHANNEL_SECRET: ${LINEBOT_CHANNEL_SECRET}
      LINEBOT_CHANNEL_TOKEN: ${LINEBOT_CHANNEL_TOKEN}
  nginx:
    image: nginx:latest
    container_name: edd2023-nginx
    ports:
      - 443:443
    volumes:
      - ./docker/nginx/config:/etc/nginx/conf.d
      - ./docker/nginx/log:/var/log/nginx
    environment:
      NGINX_SERVER_NAME: ${NGINX_SERVER_NAME}
      SSL_CERTIFICATE_FILE_NAME: ${SSL_CERTIFICATE_FILE_NAME}
      SSL_CERTIFICATE_KEY_FILE_NAME: ${SSL_CERTIFICATE_KEY_FILE_NAME}
    command: /bin/bash -c "envsubst < /etc/nginx/conf.d/default.conf.template > /etc/nginx/conf.d/default.conf && nginx-debug -g 'daemon off;'"
    # command: echo $NGINX_SERVER_NAME $SSL_CERTIFICATE_FILE_NAME
  swagger-ui:
    image: swaggerapi/swagger-ui
    container_name: "edd2023-swagger"
    ports:
      - "8002:8080"
    volumes:
      - ./docs/swagger.yaml:/openapi.yaml
    environment:
      SWAGGER_JSON: /openapi.yaml